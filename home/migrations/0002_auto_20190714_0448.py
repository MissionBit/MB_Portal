# Generated by Django 2.2.3 on 2019-07-14 04:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import salesforce.backend.operations
import salesforce.fields


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0011_update_proxy_permissions'),
        ('home', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', salesforce.fields.SalesforceAutoField(auto_created=True, db_column='Id', primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', salesforce.fields.BooleanField(default=False, verbose_name='Deleted')),
                ('name', salesforce.fields.CharField(max_length=255, verbose_name='Account Name')),
                ('type', salesforce.fields.CharField(blank=True, choices=[('School', 'School'), ('Foundation', 'Foundation'), ('Government', 'Government'), ('Business', 'Business'), ('Nonprofit', 'Nonprofit')], max_length=40, null=True, verbose_name='Account Type')),
                ('billing_street', salesforce.fields.TextField(blank=True, null=True)),
                ('billing_city', salesforce.fields.CharField(blank=True, max_length=40, null=True)),
                ('billing_state', salesforce.fields.CharField(blank=True, max_length=80, null=True, verbose_name='Billing State/Province')),
                ('billing_postal_code', salesforce.fields.CharField(blank=True, max_length=20, null=True, verbose_name='Billing Zip/Postal Code')),
                ('billing_country', salesforce.fields.CharField(blank=True, max_length=80, null=True)),
                ('npe01_systemis_individual', salesforce.fields.BooleanField(db_column='npe01__SYSTEMIsIndividual__c', default=salesforce.backend.operations.DefaultedOnCreate(), help_text='Indicates whether or not this Account is special for Contacts (Household, One-to-One, Individual) vs a normal Account.', verbose_name='_SYSTEM: IsIndividual')),
                ('master_record', salesforce.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='account_masterrecord_set', to='home.Account')),
                ('parent', salesforce.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='account_parent_set', to='home.Account')),
            ],
            options={
                'verbose_name': 'Account',
                'verbose_name_plural': 'Accounts',
                'db_table': 'Account',
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=240, unique=True)),
                ('announcement', models.TextField(max_length=2500)),
                ('posted', models.DateTimeField(auto_now=True, db_index=True)),
                ('email_recipients', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default='1901-01-01')),
                ('presence', models.CharField(default='Unassigned', max_length=100)),
                ('notes', models.TextField(default='', max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='ClassEnrollment',
            fields=[
                ('id', salesforce.fields.SalesforceAutoField(auto_created=True, db_column='Id', primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', salesforce.fields.BooleanField(default=False, verbose_name='Deleted')),
                ('name', salesforce.fields.CharField(max_length=80, verbose_name='Class Enrollment #')),
                ('created_date', salesforce.fields.DateTimeField()),
                ('last_modified_date', salesforce.fields.DateTimeField()),
                ('system_modstamp', salesforce.fields.DateTimeField()),
                ('last_activity_date', salesforce.fields.DateField(blank=True, null=True)),
                ('last_viewed_date', salesforce.fields.DateTimeField(blank=True, null=True)),
                ('last_referenced_date', salesforce.fields.DateTimeField(blank=True, null=True)),
                ('role', salesforce.fields.CharField(blank=True, choices=[('Student', 'Student'), ('TA', 'TA'), ('Volunteer', 'Volunteer')], max_length=255, null=True)),
                ('status', salesforce.fields.CharField(blank=True, choices=[('Applied', 'Applied'), ('Waitlisted', 'Waitlisted'), ('Enrolled', 'Enrolled'), ('Completed-Course', 'Completed-Course'), ('Withdrew-Application', 'Withdrew-Application'), ('Rejected', 'Rejected'), ('Dropped', 'Dropped')], max_length=255, null=True)),
                ('in_current_semester', salesforce.fields.BooleanField(db_column='In_current_semester__c', default=False, verbose_name='In current semester?')),
                ('attended_family_orientation', salesforce.fields.BooleanField(db_column='Attended_Family_Orientation__c', default=salesforce.backend.operations.DefaultedOnCreate(), verbose_name='Attended Family Orientation')),
                ('withdrew_application_detail', salesforce.fields.CharField(blank=True, choices=[("Didn't show up for interview", "Didn't show up for interview"), ('Acceptance-offer-rejected', 'Acceptance-offer-rejected'), ('Didn’t show up for class', 'Didn’t show up for class'), ('Dropped in first 2 weeks', 'Dropped in first 2 weeks'), ('Withdrew before interview', 'Withdrew before interview'), ('Class Cancelled', 'Class Cancelled')], db_column='Withdrew_Application_Detail__c', help_text='"Dropped in first 2 weeks" means that they showed up for class but decided to drop within the first 2 weeks.', max_length=255, null=True, verbose_name='Withdrew-Application Detail')),
                ('contact_race', salesforce.fields.CharField(blank=True, db_column='Contact_Race__c', help_text='DO NOT EDIT - AUTO-POPULATED BY SYSTEM', max_length=100, null=True, verbose_name='Contact - Race')),
                ('contact_gender', salesforce.fields.CharField(blank=True, db_column='Contact_Gender__c', help_text='DO NOT EDIT - AUTO-POPULATED BY SYSTEM', max_length=30, null=True, verbose_name='Contact - Gender')),
                ('attended_interview', salesforce.fields.BooleanField(db_column='Attended_Interview__c', default=salesforce.backend.operations.DefaultedOnCreate(), help_text='Check if the student attended the default student admissions interview event. Note: Do not check this field if the student attended a makeup interview.', verbose_name='Attended Interview')),
                ('attended_makeup_interview', salesforce.fields.BooleanField(db_column='Attended_Makeup_Interview__c', default=salesforce.backend.operations.DefaultedOnCreate(), help_text='Check if the student did not attend the default interview date, but attended a makeup session.', verbose_name='Attended Makeup Interview')),
                ('cultural_affiliation_or_nationality', salesforce.fields.CharField(blank=True, db_column='Cultural_Affiliation_or_Nationality__c', help_text='(optional)', max_length=100, null=True, verbose_name='Cultural Affiliation or Nationality')),
                ('sex_at_birth', salesforce.fields.CharField(blank=True, choices=[('Female', 'Female'), ('Male', 'Male'), ('Decline to answer', 'Decline to answer')], db_column='Sex_at_birth__c', help_text='(Check one)', max_length=255, null=True, verbose_name='What was your sex at birth?')),
                ('sexual_orientation', salesforce.fields.CharField(blank=True, choices=[('Bisexual', 'Bisexual'), ('Gay / Lesbian / Same-Gender Loving', 'Gay / Lesbian / Same-Gender Loving'), ('Questioning / Unsure', 'Questioning / Unsure'), ('Straight / Heterosexual', 'Straight / Heterosexual'), ('Not Listed.', 'Not Listed.'), ('Decline to answer', 'Decline to answer')], db_column='Sexual_orientation__c', help_text='How do you describe your sexual orientation or sexual identity?', max_length=255, null=True, verbose_name='Sexual orientation or sexual identity')),
                ('other_sexual_orientation', salesforce.fields.CharField(blank=True, db_column='Other_sexual_orientation__c', max_length=30, null=True, verbose_name='Other sexual orientation')),
                ('household_type', salesforce.fields.CharField(blank=True, choices=[('Single Female Headed Family', 'Single Female Headed Family'), ('Single Male Headed Family', 'Single Male Headed Family'), ('Dual Headed Family', 'Dual Headed Family')], db_column='Household_type__c', help_text='Which best describes your family? (Check one)\r\nFamily includes, but is not limited to the following—regardless of actual or perceived sexual orientation, gender identity, or marital status—a single person or a group of persons residing together.', max_length=255, null=True, verbose_name='Which best describes your family?')),
                ('income_certification', salesforce.fields.CharField(blank=True, choices=[('CalWorks', 'CalWorks'), ('Food Stamps', 'Food Stamps'), ('Medi-CAL', 'Medi-CAL'), ('Tax Return (most recent)', 'Tax Return (most recent)'), ('Unemployment (check stub)', 'Unemployment (check stub)'), ('SSI**', 'SSI**'), ('Payroll Stub**', 'Payroll Stub**'), ('Other (i.e. public housing/foster care)**', 'Other (i.e. public housing/foster care)**'), ('Self-certified', 'Self-certified')], db_column='Income_Certification__c', help_text='**current-within 2 months', max_length=4099, null=True, verbose_name='Income Certification')),
                ('estimated_income', salesforce.fields.DecimalField(blank=True, db_column='Estimated_income__c', decimal_places=2, help_text='Total estimated income for next 12 months for all adult members.', max_digits=18, null=True, verbose_name='Estimated income')),
                ('family_size', salesforce.fields.CharField(blank=True, choices=[('1 person', '1 person'), ('2 persons', '2 persons'), ('3 persons', '3 persons'), ('4 persons', '4 persons'), ('5 persons', '5 persons'), ('6 persons', '6 persons'), ('7 persons', '7 persons'), ('8 persons', '8 persons'), ('9+ persons', '9+ persons')], db_column='Family_size__c', help_text='Number of persons living in your family (including yourself):', max_length=255, null=True, verbose_name='Family size')),
                ('current_income_information', salesforce.fields.CharField(blank=True, choices=[('Extremely Low Income $0 - 27,650 (1 person)', 'Extremely Low Income $0 - 27,650 (1 person)'), ('Low Income $27,651 - 46,100 (1 person)', 'Low Income $27,651 - 46,100 (1 person)'), ('Moderate Income $46,101 - 73,750 (1 person)', 'Moderate Income $46,101 - 73,750 (1 person)'), ('Above Moderate Income $73,751 or greater (1 person)', 'Above Moderate Income $73,751 or greater (1 person)'), ('Extremely Low Income $0 - 31,600 (2 persons)', 'Extremely Low Income $0 - 31,600 (2 persons)'), ('Low Income $31,601 - 52,650 (2 persons)', 'Low Income $31,601 - 52,650 (2 persons)'), ('Moderate Income $52,651 - 84,300 (2 persons)', 'Moderate Income $52,651 - 84,300 (2 persons)'), ('Above Moderate Income $84,301 or greater (2 persons)', 'Above Moderate Income $84,301 or greater (2 persons)'), ('Extremely Low Income $0 - 35,550 (3 persons)', 'Extremely Low Income $0 - 35,550 (3 persons)'), ('Low Income $35,551 - 59,250 (3 persons)', 'Low Income $35,551 - 59,250 (3 persons)'), ('Moderate Income $59,251 - 94,850 (3 persons)', 'Moderate Income $59,251 - 94,850 (3 persons)'), ('Above Moderate Income $94,851 or greater (3 persons)', 'Above Moderate Income $94,851 or greater (3 persons)'), ('Extremely Low Income $0 - 39,500 (4 persons)', 'Extremely Low Income $0 - 39,500 (4 persons)'), ('Low Income $39,501 - 65,800 (4 persons)', 'Low Income $39,501 - 65,800 (4 persons)'), ('Moderate Income $65,801 - 105,350 (4 persons)', 'Moderate Income $65,801 - 105,350 (4 persons)'), ('Above Moderate Income $105,351 or greater (4 persons)', 'Above Moderate Income $105,351 or greater (4 persons)'), ('Extremely Low Income $0 - 42,700 (5 persons)', 'Extremely Low Income $0 - 42,700 (5 persons)'), ('Low Income $42,701 - 71,100 (5 persons)', 'Low Income $42,701 - 71,100 (5 persons)'), ('Moderate Income $71,101 - 113,800 (5 persons)', 'Moderate Income $71,101 - 113,800 (5 persons)'), ('Above Moderate Income $113,801 or greater (5 persons)', 'Above Moderate Income $113,801 or greater (5 persons)'), ('Extremely Low Income $0 - 45,850 (6 persons)', 'Extremely Low Income $0 - 45,850 (6 persons)'), ('Low Income $45,851 - 76,350 (6 persons)', 'Low Income $45,851 - 76,350 (6 persons)'), ('Moderate Income $76,351 - 122,250 (6 persons)', 'Moderate Income $76,351 - 122,250 (6 persons)'), ('Above Moderate Income $122,251 or greater (6 persons)', 'Above Moderate Income $122,251 or greater (6 persons)'), ('Extremely Low Income $0 - 49,000 (7 persons)', 'Extremely Low Income $0 - 49,000 (7 persons)'), ('Low Income $49,001 - 81,600 (7 persons)', 'Low Income $49,001 - 81,600 (7 persons)'), ('Moderate Income $81,601 - 130,650 (7 persons)', 'Moderate Income $81,601 - 130,650 (7 persons)'), ('Above Moderate Income $130,651 or greater (7 persons)', 'Above Moderate Income $130,651 or greater (7 persons)'), ('Extremely Low Income $0 - 52,150 (8 persons)', 'Extremely Low Income $0 - 52,150 (8 persons)'), ('Low Income $52,151 - 86,900 (8 persons)', 'Low Income $52,151 - 86,900 (8 persons)'), ('Moderate Income $86,901 - 139,100 (8 persons)', 'Moderate Income $86,901 - 139,100 (8 persons)'), ('Above Moderate Income $139,101 or greater (8 persons)', 'Above Moderate Income $139,101 or greater (8 persons)')], db_column='Current_Income_Information__c', max_length=255, null=True, verbose_name='Current Income Information')),
                ('if_self_certified_please_explain', salesforce.fields.TextField(blank=True, db_column='If_self_certified_please_explain__c', null=True, verbose_name='If self-certified, please explain:')),
                ('contact_ethnicity', salesforce.fields.CharField(blank=True, db_column='Contact_Ethnicity__c', help_text='DO NOT EDIT - AUTO-POPULATED BY SYSTEM', max_length=100, null=True, verbose_name='Contact - Ethnicity')),
                ('notes', salesforce.fields.TextField(blank=True, null=True)),
                ('interview_date', salesforce.fields.DateTimeField(blank=True, db_column='Interview_Date__c', help_text="This is the interview date and time that the student signed up for. Empty means that the student did not sign up for an interview. Having an interview date does not mean that the student showed up for the interview, only that they RSVP'ed.", null=True, verbose_name='Interview Date')),
                ('returner', salesforce.fields.BooleanField(default=False, verbose_name='Returner?')),
                ('temp_returner', salesforce.fields.BooleanField(db_column='Temp_Returner__c', default=salesforce.backend.operations.DefaultedOnCreate(), help_text='This is a temporary field that determines if a student is a returner based on their response to this question on the application. Once we complete migrating all of our past data into Salesforce, this field will be deleted.', verbose_name='Returner? (temp)')),
                ('origin_school', salesforce.fields.CharField(blank=True, db_column='Origin_School__c', max_length=1300, null=True, verbose_name='School attended by this student')),
                ('parent_phone', salesforce.fields.CharField(blank=True, db_column='Parent_Phone__c', max_length=1300, null=True, verbose_name='Parent Phone')),
                ('parent_email', salesforce.fields.CharField(blank=True, db_column='Parent_Email__c', max_length=1300, null=True, verbose_name='Parent Email')),
            ],
            options={
                'verbose_name': 'Class Enrollment',
                'verbose_name_plural': 'Class Enrollments',
                'db_table': 'Class_Enrollment__c',
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='ClassOffering',
            fields=[
                ('id', salesforce.fields.SalesforceAutoField(auto_created=True, db_column='Id', primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', salesforce.fields.BooleanField(default=False, verbose_name='Deleted')),
                ('name', salesforce.fields.CharField(blank=True, default=salesforce.backend.operations.DefaultedOnCreate(), max_length=80, null=True, verbose_name='Class Offering Name')),
                ('created_date', salesforce.fields.DateTimeField()),
                ('last_modified_date', salesforce.fields.DateTimeField()),
                ('system_modstamp', salesforce.fields.DateTimeField()),
                ('last_viewed_date', salesforce.fields.DateTimeField(blank=True, null=True)),
                ('last_referenced_date', salesforce.fields.DateTimeField(blank=True, null=True)),
                ('start_date', salesforce.fields.DateField(blank=True, db_column='Start_Date__c', null=True, verbose_name='Start Date')),
                ('end_date', salesforce.fields.DateField(blank=True, db_column='End_Date__c', null=True, verbose_name='End Date')),
                ('description', salesforce.fields.TextField(blank=True, null=True)),
                ('course', salesforce.fields.CharField(blank=True, choices=[('Android Game Design', 'Android Game Design'), ('Intro to Web Programming', 'Intro to Web Programming'), ('Field Trips', 'Field Trips'), ('Intro to Game Design with Unity', 'Intro to Game Design with Unity'), ('Web Design 101', 'Web Design 101'), ('Mobile App Dev with Ionic', 'Mobile App Dev with Ionic'), ('MB Internship', 'MB Internship'), ('Structured Study Program', 'Structured Study Program')], max_length=255, null=True)),
                ('academic_semester', salesforce.fields.CharField(blank=True, db_column='Academic_semester__c', max_length=1300, null=True, verbose_name='Academic semester')),
                ('meeting_days', salesforce.fields.CharField(blank=True, choices=[('M/W', 'M/W'), ('T/R', 'T/R'), ('M-F', 'M-F')], db_column='Meeting_Days__c', max_length=255, null=True, verbose_name='Meeting Days')),
                ('count_total_female_students', salesforce.fields.DecimalField(blank=True, db_column='Count_total_female_students__c', decimal_places=0, max_digits=18, null=True, verbose_name='Count - Total Female Students')),
                ('count_total_latino_african_american', salesforce.fields.DecimalField(blank=True, db_column='Count_total_latino_african_american__c', decimal_places=0, max_digits=18, null=True, verbose_name='Count - Total African American')),
                ('count_total_latino_students', salesforce.fields.DecimalField(blank=True, db_column='Count_Total_Latino_Students__c', decimal_places=0, max_digits=18, null=True, verbose_name='Count - Total Latino Students')),
                ('female', salesforce.fields.DecimalField(blank=True, decimal_places=1, max_digits=18, null=True, verbose_name='% Female')),
                ('latino_african_american', salesforce.fields.DecimalField(blank=True, db_column='Latino_African_American__c', decimal_places=1, max_digits=18, null=True, verbose_name='% Latino/African American')),
                ('current_academic_semester', salesforce.fields.CharField(blank=True, db_column='Current_academic_semester__c', max_length=1300, null=True, verbose_name='Current academic semester')),
                ('in_current_semester', salesforce.fields.BooleanField(db_column='In_current_semester__c', default=False, verbose_name='In current semester?')),
            ],
            options={
                'verbose_name': 'Class Offering',
                'verbose_name_plural': 'Class Offerings',
                'db_table': 'Class_Offering__c',
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.CharField(choices=[('Android Game Design', 'Android Game Design'), ('Intro to Web Programming', 'Intro to Web Programming'), ('Field Trips', 'Field Trips'), ('Intro to Game Design with Unity', 'Intro to Game Design with Unity'), ('Web Design 101', 'Web Design 101'), ('Mobile App Dev with Ionic', 'Mobile App Dev with Ionic'), ('MB Internship', 'MB Internship'), ('Structured Study Program', 'Structured Study Program')], max_length=255)),
                ('students', models.ManyToManyField(related_name='classroom_students', to=settings.AUTH_USER_MODEL)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classroom_lead_teacher', to=settings.AUTH_USER_MODEL)),
                ('teacher_assistant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classroom_teacher_assistant', to=settings.AUTH_USER_MODEL)),
                ('volunteers', models.ManyToManyField(related_name='classroom_volunteers', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', salesforce.fields.SalesforceAutoField(auto_created=True, db_column='Id', primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', salesforce.fields.BooleanField(default=False, verbose_name='Deleted')),
                ('last_name', salesforce.fields.CharField(max_length=80)),
                ('first_name', salesforce.fields.CharField(blank=True, max_length=40, null=True)),
                ('salutation', salesforce.fields.CharField(blank=True, choices=[('Mr.', 'Mr.'), ('Ms.', 'Ms.'), ('Mrs.', 'Mrs.'), ('Dr.', 'Dr.'), ('Prof.', 'Prof.')], max_length=40, null=True)),
                ('middle_name', salesforce.fields.CharField(blank=True, max_length=40, null=True)),
                ('suffix', salesforce.fields.CharField(blank=True, max_length=40, null=True)),
                ('name', salesforce.fields.CharField(max_length=121, verbose_name='Full Name')),
                ('mailing_street', salesforce.fields.TextField(blank=True, null=True)),
                ('mailing_city', salesforce.fields.CharField(blank=True, max_length=40, null=True)),
                ('mailing_state', salesforce.fields.CharField(blank=True, max_length=80, null=True, verbose_name='Mailing State/Province')),
                ('mailing_postal_code', salesforce.fields.CharField(blank=True, max_length=20, null=True, verbose_name='Mailing Zip/Postal Code')),
                ('mailing_country', salesforce.fields.CharField(blank=True, max_length=80, null=True)),
                ('mailing_state_code', salesforce.fields.CharField(blank=True, choices=[('AC', 'Acre'), ('AG', 'Agrigento'), ('AG', 'Aguascalientes'), ('AL', 'Alabama'), ('AL', 'Alagoas'), ('AK', 'Alaska'), ('AB', 'Alberta'), ('AL', 'Alessandria'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('AN', 'Ancona'), ('AN', 'Andaman and Nicobar Islands'), ('AP', 'Andhra Pradesh'), ('34', 'Anhui'), ('AO', 'Aosta'), ('AR', 'Arezzo'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('AR', 'Arunachal Pradesh'), ('AP', 'Ascoli Piceno'), ('AS', 'Assam'), ('AT', 'Asti'), ('ACT', 'Australian Capital Territory'), ('AV', 'Avellino'), ('BA', 'Bahia'), ('BC', 'Baja California'), ('BS', 'Baja California Sur'), ('BA', 'Bari'), ('BT', 'Barletta-Andria-Trani'), ('11', 'Beijing'), ('BL', 'Belluno'), ('BN', 'Benevento'), ('BG', 'Bergamo'), ('BI', 'Biella'), ('BR', 'Bihar'), ('BO', 'Bologna'), ('BZ', 'Bolzano'), ('BS', 'Brescia'), ('BR', 'Brindisi'), ('BC', 'British Columbia'), ('CA', 'Cagliari'), ('CA', 'California'), ('CL', 'Caltanissetta'), ('CM', 'Campeche'), ('CB', 'Campobasso'), ('CI', 'Carbonia-Iglesias'), ('CW', 'Carlow'), ('CE', 'Caserta'), ('CT', 'Catania'), ('CZ', 'Catanzaro'), ('CN', 'Cavan'), ('CE', 'Ceará'), ('CH', 'Chandigarh'), ('CT', 'Chhattisgarh'), ('CS', 'Chiapas'), ('CH', 'Chieti'), ('CH', 'Chihuahua'), ('71', 'Chinese Taipei'), ('50', 'Chongqing'), ('CE', 'Clare'), ('CO', 'Coahuila'), ('CL', 'Colima'), ('CO', 'Colorado'), ('CO', 'Como'), ('CT', 'Connecticut'), ('CO', 'Cork'), ('CS', 'Cosenza'), ('CR', 'Cremona'), ('KR', 'Crotone'), ('CN', 'Cuneo'), ('DN', 'Dadra and Nagar Haveli'), ('DD', 'Daman and Diu'), ('DE', 'Delaware'), ('DL', 'Delhi'), ('DC', 'District of Columbia'), ('DF', 'Distrito Federal'), ('DL', 'Donegal'), ('D', 'Dublin'), ('DG', 'Durango'), ('EN', 'Enna'), ('ES', 'Espírito Santo'), ('DF', 'Federal District'), ('FM', 'Fermo'), ('FE', 'Ferrara'), ('FI', 'Florence'), ('FL', 'Florida'), ('FG', 'Foggia'), ('FC', 'Forlì-Cesena'), ('FR', 'Frosinone'), ('35', 'Fujian'), ('G', 'Galway'), ('62', 'Gansu'), ('GE', 'Genoa'), ('GA', 'Georgia'), ('GA', 'Goa'), ('GO', 'Goiás'), ('GO', 'Gorizia'), ('GR', 'Grosseto'), ('GT', 'Guanajuato'), ('44', 'Guangdong'), ('45', 'Guangxi'), ('GR', 'Guerrero'), ('52', 'Guizhou'), ('GJ', 'Gujarat'), ('46', 'Hainan'), ('HR', 'Haryana'), ('HI', 'Hawaii'), ('13', 'Hebei'), ('23', 'Heilongjiang'), ('41', 'Henan'), ('HG', 'Hidalgo'), ('HP', 'Himachal Pradesh'), ('91', 'Hong Kong'), ('42', 'Hubei'), ('43', 'Hunan'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IM', 'Imperia'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('IS', 'Isernia'), ('JA', 'Jalisco'), ('JK', 'Jammu and Kashmir'), ('JH', 'Jharkhand'), ('32', 'Jiangsu'), ('36', 'Jiangxi'), ('22', 'Jilin'), ('KS', 'Kansas'), ('KA', 'Karnataka'), ('KY', 'Kentucky'), ('KL', 'Kerala'), ('KY', 'Kerry'), ('KE', 'Kildare'), ('KK', 'Kilkenny'), ('AQ', "L'Aquila"), ('LD', 'Lakshadweep'), ('LS', 'Laois'), ('SP', 'La Spezia'), ('LT', 'Latina'), ('LE', 'Lecce'), ('LC', 'Lecco'), ('LM', 'Leitrim'), ('21', 'Liaoning'), ('LK', 'Limerick'), ('LI', 'Livorno'), ('LO', 'Lodi'), ('LD', 'Longford'), ('LA', 'Louisiana'), ('LH', 'Louth'), ('LU', 'Lucca'), ('92', 'Macao'), ('MC', 'Macerata'), ('MP', 'Madhya Pradesh'), ('MH', 'Maharashtra'), ('ME', 'Maine'), ('MN', 'Manipur'), ('MB', 'Manitoba'), ('MN', 'Mantua'), ('MA', 'Maranhão'), ('MD', 'Maryland'), ('MS', 'Massa and Carrara'), ('MA', 'Massachusetts'), ('MT', 'Matera'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MO', 'Mayo'), ('MH', 'Meath'), ('VS', 'Medio Campidano'), ('ML', 'Meghalaya'), ('ME', 'Messina'), ('ME', 'Mexico State'), ('MI', 'Michigan'), ('MI', 'Michoacán'), ('MI', 'Milan'), ('MG', 'Minas Gerais'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MZ', 'Mizoram'), ('MO', 'Modena'), ('MN', 'Monaghan'), ('MT', 'Montana'), ('MB', 'Monza and Brianza'), ('MO', 'Morelos'), ('NL', 'Nagaland'), ('NA', 'Naples'), ('NA', 'Nayarit'), ('NE', 'Nebraska'), ('15', 'Nei Mongol'), ('NV', 'Nevada'), ('NB', 'New Brunswick'), ('NL', 'Newfoundland and Labrador'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NSW', 'New South Wales'), ('NY', 'New York'), ('64', 'Ningxia'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('NT', 'Northern Territory'), ('NT', 'Northwest Territories'), ('NO', 'Novara'), ('NS', 'Nova Scotia'), ('NL', 'Nuevo León'), ('NU', 'Nunavut'), ('NU', 'Nuoro'), ('OA', 'Oaxaca'), ('OR', 'Odisha'), ('OY', 'Offaly'), ('OG', 'Ogliastra'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OT', 'Olbia-Tempio'), ('ON', 'Ontario'), ('OR', 'Oregon'), ('OR', 'Oristano'), ('PD', 'Padua'), ('PA', 'Palermo'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PR', 'Parma'), ('PV', 'Pavia'), ('PA', 'Pennsylvania'), ('PE', 'Pernambuco'), ('PG', 'Perugia'), ('PU', 'Pesaro and Urbino'), ('PE', 'Pescara'), ('PC', 'Piacenza'), ('PI', 'Piauí'), ('PI', 'Pisa'), ('PT', 'Pistoia'), ('PN', 'Pordenone'), ('PZ', 'Potenza'), ('PO', 'Prato'), ('PE', 'Prince Edward Island'), ('PY', 'Puducherry'), ('PB', 'Puebla'), ('PB', 'Punjab'), ('63', 'Qinghai'), ('QC', 'Quebec'), ('QLD', 'Queensland'), ('QE', 'Querétaro'), ('QR', 'Quintana Roo'), ('RG', 'Ragusa'), ('RJ', 'Rajasthan'), ('RA', 'Ravenna'), ('RC', 'Reggio Calabria'), ('RE', 'Reggio Emilia'), ('RI', 'Rhode Island'), ('RI', 'Rieti'), ('RN', 'Rimini'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RM', 'Rome'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('RN', 'Roscommon'), ('RO', 'Rovigo'), ('SA', 'Salerno'), ('SL', 'San Luis Potosí'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SK', 'Saskatchewan'), ('SS', 'Sassari'), ('SV', 'Savona'), ('SE', 'Sergipe'), ('61', 'Shaanxi'), ('37', 'Shandong'), ('31', 'Shanghai'), ('14', 'Shanxi'), ('51', 'Sichuan'), ('SI', 'Siena'), ('SK', 'Sikkim'), ('SI', 'Sinaloa'), ('SO', 'Sligo'), ('SO', 'Sondrio'), ('SO', 'Sonora'), ('SA', 'South Australia'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('SR', 'Syracuse'), ('TB', 'Tabasco'), ('TM', 'Tamaulipas'), ('TN', 'Tamil Nadu'), ('TA', 'Taranto'), ('TAS', 'Tasmania'), ('TN', 'Tennessee'), ('TE', 'Teramo'), ('TR', 'Terni'), ('TX', 'Texas'), ('12', 'Tianjin'), ('TA', 'Tipperary'), ('TL', 'Tlaxcala'), ('TO', 'Tocantins'), ('TP', 'Trapani'), ('TN', 'Trento'), ('TV', 'Treviso'), ('TS', 'Trieste'), ('TR', 'Tripura'), ('TO', 'Turin'), ('UD', 'Udine'), ('UT', 'Utah'), ('UT', 'Uttarakhand'), ('UP', 'Uttar Pradesh'), ('VA', 'Varese'), ('VE', 'Venice'), ('VE', 'Veracruz'), ('VB', 'Verbano-Cusio-Ossola'), ('VC', 'Vercelli'), ('VT', 'Vermont'), ('VR', 'Verona'), ('VV', 'Vibo Valentia'), ('VI', 'Vicenza'), ('VIC', 'Victoria'), ('VA', 'Virginia'), ('VT', 'Viterbo'), ('WA', 'Washington'), ('WD', 'Waterford'), ('WB', 'West Bengal'), ('WA', 'Western Australia'), ('WH', 'Westmeath'), ('WV', 'West Virginia'), ('WX', 'Wexford'), ('WW', 'Wicklow'), ('WI', 'Wisconsin'), ('WY', 'Wyoming'), ('65', 'Xinjiang'), ('54', 'Xizang'), ('YU', 'Yucatán'), ('YT', 'Yukon Territories'), ('53', 'Yunnan'), ('ZA', 'Zacatecas'), ('33', 'Zhejiang')], max_length=10, null=True, verbose_name='Mailing State/Province Code')),
                ('mailing_country_code', salesforce.fields.CharField(blank=True, choices=[('AC', 'Acre'), ('AG', 'Agrigento'), ('AG', 'Aguascalientes'), ('AL', 'Alabama'), ('AL', 'Alagoas'), ('AK', 'Alaska'), ('AB', 'Alberta'), ('AL', 'Alessandria'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('AN', 'Ancona'), ('AN', 'Andaman and Nicobar Islands'), ('AP', 'Andhra Pradesh'), ('34', 'Anhui'), ('AO', 'Aosta'), ('AR', 'Arezzo'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('AR', 'Arunachal Pradesh'), ('AP', 'Ascoli Piceno'), ('AS', 'Assam'), ('AT', 'Asti'), ('ACT', 'Australian Capital Territory'), ('AV', 'Avellino'), ('BA', 'Bahia'), ('BC', 'Baja California'), ('BS', 'Baja California Sur'), ('BA', 'Bari'), ('BT', 'Barletta-Andria-Trani'), ('11', 'Beijing'), ('BL', 'Belluno'), ('BN', 'Benevento'), ('BG', 'Bergamo'), ('BI', 'Biella'), ('BR', 'Bihar'), ('BO', 'Bologna'), ('BZ', 'Bolzano'), ('BS', 'Brescia'), ('BR', 'Brindisi'), ('BC', 'British Columbia'), ('CA', 'Cagliari'), ('CA', 'California'), ('CL', 'Caltanissetta'), ('CM', 'Campeche'), ('CB', 'Campobasso'), ('CI', 'Carbonia-Iglesias'), ('CW', 'Carlow'), ('CE', 'Caserta'), ('CT', 'Catania'), ('CZ', 'Catanzaro'), ('CN', 'Cavan'), ('CE', 'Ceará'), ('CH', 'Chandigarh'), ('CT', 'Chhattisgarh'), ('CS', 'Chiapas'), ('CH', 'Chieti'), ('CH', 'Chihuahua'), ('71', 'Chinese Taipei'), ('50', 'Chongqing'), ('CE', 'Clare'), ('CO', 'Coahuila'), ('CL', 'Colima'), ('CO', 'Colorado'), ('CO', 'Como'), ('CT', 'Connecticut'), ('CO', 'Cork'), ('CS', 'Cosenza'), ('CR', 'Cremona'), ('KR', 'Crotone'), ('CN', 'Cuneo'), ('DN', 'Dadra and Nagar Haveli'), ('DD', 'Daman and Diu'), ('DE', 'Delaware'), ('DL', 'Delhi'), ('DC', 'District of Columbia'), ('DF', 'Distrito Federal'), ('DL', 'Donegal'), ('D', 'Dublin'), ('DG', 'Durango'), ('EN', 'Enna'), ('ES', 'Espírito Santo'), ('DF', 'Federal District'), ('FM', 'Fermo'), ('FE', 'Ferrara'), ('FI', 'Florence'), ('FL', 'Florida'), ('FG', 'Foggia'), ('FC', 'Forlì-Cesena'), ('FR', 'Frosinone'), ('35', 'Fujian'), ('G', 'Galway'), ('62', 'Gansu'), ('GE', 'Genoa'), ('GA', 'Georgia'), ('GA', 'Goa'), ('GO', 'Goiás'), ('GO', 'Gorizia'), ('GR', 'Grosseto'), ('GT', 'Guanajuato'), ('44', 'Guangdong'), ('45', 'Guangxi'), ('GR', 'Guerrero'), ('52', 'Guizhou'), ('GJ', 'Gujarat'), ('46', 'Hainan'), ('HR', 'Haryana'), ('HI', 'Hawaii'), ('13', 'Hebei'), ('23', 'Heilongjiang'), ('41', 'Henan'), ('HG', 'Hidalgo'), ('HP', 'Himachal Pradesh'), ('91', 'Hong Kong'), ('42', 'Hubei'), ('43', 'Hunan'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IM', 'Imperia'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('IS', 'Isernia'), ('JA', 'Jalisco'), ('JK', 'Jammu and Kashmir'), ('JH', 'Jharkhand'), ('32', 'Jiangsu'), ('36', 'Jiangxi'), ('22', 'Jilin'), ('KS', 'Kansas'), ('KA', 'Karnataka'), ('KY', 'Kentucky'), ('KL', 'Kerala'), ('KY', 'Kerry'), ('KE', 'Kildare'), ('KK', 'Kilkenny'), ('AQ', "L'Aquila"), ('LD', 'Lakshadweep'), ('LS', 'Laois'), ('SP', 'La Spezia'), ('LT', 'Latina'), ('LE', 'Lecce'), ('LC', 'Lecco'), ('LM', 'Leitrim'), ('21', 'Liaoning'), ('LK', 'Limerick'), ('LI', 'Livorno'), ('LO', 'Lodi'), ('LD', 'Longford'), ('LA', 'Louisiana'), ('LH', 'Louth'), ('LU', 'Lucca'), ('92', 'Macao'), ('MC', 'Macerata'), ('MP', 'Madhya Pradesh'), ('MH', 'Maharashtra'), ('ME', 'Maine'), ('MN', 'Manipur'), ('MB', 'Manitoba'), ('MN', 'Mantua'), ('MA', 'Maranhão'), ('MD', 'Maryland'), ('MS', 'Massa and Carrara'), ('MA', 'Massachusetts'), ('MT', 'Matera'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MO', 'Mayo'), ('MH', 'Meath'), ('VS', 'Medio Campidano'), ('ML', 'Meghalaya'), ('ME', 'Messina'), ('ME', 'Mexico State'), ('MI', 'Michigan'), ('MI', 'Michoacán'), ('MI', 'Milan'), ('MG', 'Minas Gerais'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MZ', 'Mizoram'), ('MO', 'Modena'), ('MN', 'Monaghan'), ('MT', 'Montana'), ('MB', 'Monza and Brianza'), ('MO', 'Morelos'), ('NL', 'Nagaland'), ('NA', 'Naples'), ('NA', 'Nayarit'), ('NE', 'Nebraska'), ('15', 'Nei Mongol'), ('NV', 'Nevada'), ('NB', 'New Brunswick'), ('NL', 'Newfoundland and Labrador'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NSW', 'New South Wales'), ('NY', 'New York'), ('64', 'Ningxia'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('NT', 'Northern Territory'), ('NT', 'Northwest Territories'), ('NO', 'Novara'), ('NS', 'Nova Scotia'), ('NL', 'Nuevo León'), ('NU', 'Nunavut'), ('NU', 'Nuoro'), ('OA', 'Oaxaca'), ('OR', 'Odisha'), ('OY', 'Offaly'), ('OG', 'Ogliastra'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OT', 'Olbia-Tempio'), ('ON', 'Ontario'), ('OR', 'Oregon'), ('OR', 'Oristano'), ('PD', 'Padua'), ('PA', 'Palermo'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PR', 'Parma'), ('PV', 'Pavia'), ('PA', 'Pennsylvania'), ('PE', 'Pernambuco'), ('PG', 'Perugia'), ('PU', 'Pesaro and Urbino'), ('PE', 'Pescara'), ('PC', 'Piacenza'), ('PI', 'Piauí'), ('PI', 'Pisa'), ('PT', 'Pistoia'), ('PN', 'Pordenone'), ('PZ', 'Potenza'), ('PO', 'Prato'), ('PE', 'Prince Edward Island'), ('PY', 'Puducherry'), ('PB', 'Puebla'), ('PB', 'Punjab'), ('63', 'Qinghai'), ('QC', 'Quebec'), ('QLD', 'Queensland'), ('QE', 'Querétaro'), ('QR', 'Quintana Roo'), ('RG', 'Ragusa'), ('RJ', 'Rajasthan'), ('RA', 'Ravenna'), ('RC', 'Reggio Calabria'), ('RE', 'Reggio Emilia'), ('RI', 'Rhode Island'), ('RI', 'Rieti'), ('RN', 'Rimini'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RM', 'Rome'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('RN', 'Roscommon'), ('RO', 'Rovigo'), ('SA', 'Salerno'), ('SL', 'San Luis Potosí'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SK', 'Saskatchewan'), ('SS', 'Sassari'), ('SV', 'Savona'), ('SE', 'Sergipe'), ('61', 'Shaanxi'), ('37', 'Shandong'), ('31', 'Shanghai'), ('14', 'Shanxi'), ('51', 'Sichuan'), ('SI', 'Siena'), ('SK', 'Sikkim'), ('SI', 'Sinaloa'), ('SO', 'Sligo'), ('SO', 'Sondrio'), ('SO', 'Sonora'), ('SA', 'South Australia'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('SR', 'Syracuse'), ('TB', 'Tabasco'), ('TM', 'Tamaulipas'), ('TN', 'Tamil Nadu'), ('TA', 'Taranto'), ('TAS', 'Tasmania'), ('TN', 'Tennessee'), ('TE', 'Teramo'), ('TR', 'Terni'), ('TX', 'Texas'), ('12', 'Tianjin'), ('TA', 'Tipperary'), ('TL', 'Tlaxcala'), ('TO', 'Tocantins'), ('TP', 'Trapani'), ('TN', 'Trento'), ('TV', 'Treviso'), ('TS', 'Trieste'), ('TR', 'Tripura'), ('TO', 'Turin'), ('UD', 'Udine'), ('UT', 'Utah'), ('UT', 'Uttarakhand'), ('UP', 'Uttar Pradesh'), ('VA', 'Varese'), ('VE', 'Venice'), ('VE', 'Veracruz'), ('VB', 'Verbano-Cusio-Ossola'), ('VC', 'Vercelli'), ('VT', 'Vermont'), ('VR', 'Verona'), ('VV', 'Vibo Valentia'), ('VI', 'Vicenza'), ('VIC', 'Victoria'), ('VA', 'Virginia'), ('VT', 'Viterbo'), ('WA', 'Washington'), ('WD', 'Waterford'), ('WB', 'West Bengal'), ('WA', 'Western Australia'), ('WH', 'Westmeath'), ('WV', 'West Virginia'), ('WX', 'Wexford'), ('WW', 'Wicklow'), ('WI', 'Wisconsin'), ('WY', 'Wyoming'), ('65', 'Xinjiang'), ('54', 'Xizang'), ('YU', 'Yucatán'), ('YT', 'Yukon Territories'), ('53', 'Yunnan'), ('ZA', 'Zacatecas'), ('33', 'Zhejiang')], default=salesforce.backend.operations.DefaultedOnCreate(), max_length=10, null=True)),
                ('mobile_phone', salesforce.fields.CharField(blank=True, max_length=40, null=True)),
                ('home_phone', salesforce.fields.CharField(blank=True, max_length=40, null=True)),
                ('other_phone', salesforce.fields.CharField(blank=True, max_length=40, null=True)),
                ('email', salesforce.fields.EmailField(blank=True, max_length=254, null=True)),
                ('title', salesforce.fields.CharField(blank=True, max_length=128, null=True)),
                ('department', salesforce.fields.CharField(blank=True, max_length=80, null=True)),
                ('birthdate', salesforce.fields.DateField(blank=True, null=True)),
                ('created_date', salesforce.fields.DateTimeField()),
                ('last_modified_date', salesforce.fields.DateTimeField()),
                ('system_modstamp', salesforce.fields.DateTimeField()),
                ('last_activity_date', salesforce.fields.DateField(blank=True, null=True, verbose_name='Last Activity')),
                ('last_curequest_date', salesforce.fields.DateTimeField(blank=True, db_column='LastCURequestDate', null=True, verbose_name='Last Stay-in-Touch Request Date')),
                ('last_cuupdate_date', salesforce.fields.DateTimeField(blank=True, db_column='LastCUUpdateDate', null=True, verbose_name='Last Stay-in-Touch Save Date')),
                ('last_viewed_date', salesforce.fields.DateTimeField(blank=True, null=True)),
                ('last_referenced_date', salesforce.fields.DateTimeField(blank=True, null=True)),
                ('email_bounced_reason', salesforce.fields.CharField(blank=True, max_length=255, null=True)),
                ('email_bounced_date', salesforce.fields.DateTimeField(blank=True, null=True)),
                ('is_email_bounced', salesforce.fields.BooleanField(default=False)),
                ('photo_url', salesforce.fields.URLField(blank=True, null=True, verbose_name='Photo URL')),
                ('jigsaw_contact_id', salesforce.fields.CharField(blank=True, max_length=20, null=True, verbose_name='Jigsaw Contact ID')),
                ('race', salesforce.fields.CharField(blank=True, choices=[('American Indian/Alaskan Native', 'American Indian/Alaskan Native'), ('Asian', 'Asian'), ('Black/African American', 'Black/African American'), ('Native Hawaiian/Other Pacific Islander', 'Native Hawaiian/Other Pacific Islander'), ('White', 'White'), ('American Indian/Alaskan Native AND Black/African American', 'American Indian/Alaskan Native AND Black/African American'), ('American Indian/Alaskan Native AND White', 'American Indian/Alaskan Native AND White'), ('Asian AND White', 'Asian AND White'), ('Black/African American AND White', 'Black/African American AND White'), ('Other/Multiracial', 'Other/Multiracial'), ('Politely Decline', 'Politely Decline')], max_length=255, null=True, verbose_name='Which best describes your race?')),
                ('gender', salesforce.fields.CharField(blank=True, choices=[('Female', 'Female'), ('Male', 'Male'), ('Genderqueer/Gender Non-binary', 'Genderqueer/Gender Non-binary'), ('Trans Female', 'Trans Female'), ('Trans Male', 'Trans Male'), ('Other', 'Not Listed')], max_length=255, null=True)),
                ('which_best_describes_your_ethnicity', salesforce.fields.CharField(blank=True, choices=[('Hispanic/Latinx', 'Hispanic/Latinx'), ('Not Hispanic/Latinx', 'Not Hispanic/Latinx'), ('Politely Decline', 'Politely Decline')], db_column='Which_best_describes_your_ethnicity__c', max_length=255, null=True, verbose_name='Which best describes your ethnicity?')),
                ('expected_graduation_year', salesforce.fields.CharField(blank=True, db_column='Expected_graduation_year__c', help_text='Enter the year this contact is expected to graduate.  For example, 2020', max_length=4, null=True, verbose_name='Expected graduation year')),
                ('current_grade_level', salesforce.fields.CharField(blank=True, db_column='Current_grade_level__c', max_length=1300, null=True, verbose_name='Current grade level')),
                ('volunteer_area_s_of_interest', salesforce.fields.CharField(blank=True, choices=[('Classroom', 'Classroom'), ('Event', 'Event'), ('Other', 'Other')], db_column='Volunteer_area_s_of_interest__c', max_length=4099, null=True, verbose_name='Volunteer area(s) of interest')),
                ('enrollments_this_semester_applied', salesforce.fields.DecimalField(blank=True, db_column='enrollments_this_semester_Applied__c', decimal_places=0, help_text='DO NOT EDIT - AUTO-POPULATED BY SYSTEM', max_digits=2, null=True, verbose_name='# enrollments this semester - Applied')),
                ('enrollments_this_semester_waitlisted', salesforce.fields.DecimalField(blank=True, db_column='enrollments_this_semester_Waitlisted__c', decimal_places=0, help_text='DO NOT EDIT - AUTO-POPULATED BY SYSTEM', max_digits=2, null=True, verbose_name='# enrollments this semester - Waitlisted')),
                ('enrollments_this_semester_rejected', salesforce.fields.DecimalField(blank=True, db_column='enrollments_this_semester_Rejected__c', decimal_places=0, help_text='DO NOT EDIT - AUTO-POPULATED BY SYSTEM', max_digits=2, null=True, verbose_name='# enrollments this semester - Rejected')),
                ('enrollments_this_semester_drop_out', salesforce.fields.DecimalField(blank=True, db_column='enrollments_this_semester_Drop_out__c', decimal_places=0, help_text='DO NOT EDIT - AUTO-POPULATED BY SYSTEM', max_digits=2, null=True, verbose_name='# enrollments this semester - Drop out')),
                ('race_other', salesforce.fields.CharField(blank=True, db_column='Race_Other__c', max_length=100, null=True, verbose_name='Which best describes your race? (Other)')),
                ('gender_other', salesforce.fields.CharField(blank=True, db_column='Gender_Other__c', max_length=50, null=True, verbose_name='Gender (Other)')),
                ('parent_guardian_first_name', salesforce.fields.CharField(blank=True, db_column='Parent_Guardian_first_name__c', max_length=100, null=True, verbose_name='Parent/Guardian first name')),
                ('parent_guardian_last_name', salesforce.fields.CharField(blank=True, db_column='Parent_Guardian_last_name__c', max_length=100, null=True, verbose_name='Parent/Guardian last name')),
                ('parent_guardian_phone', salesforce.fields.CharField(blank=True, db_column='Parent_Guardian_phone__c', max_length=40, null=True, verbose_name='Parent/Guardian phone')),
                ('parent_guardian_email', salesforce.fields.EmailField(blank=True, db_column='Parent_Guardian_email__c', max_length=254, null=True, verbose_name='Parent/Guardian email')),
                ('dm_current_grade', salesforce.fields.CharField(blank=True, choices=[('Graduating 8th', 'Graduating 8th'), ('Freshman, 9th', 'Freshman, 9th'), ('Sophomore, 10th', 'Sophomore, 10th'), ('Junior, 11th', 'Junior, 11th'), ('Senior, 12th', 'Senior, 12th')], db_column='DM_Current_grade__c', help_text='Need this for data migration to calculate Expected Graduation Year?  If not, delete this field.', max_length=255, null=True, verbose_name='DM - Current grade')),
                ('client_id', salesforce.fields.CharField(blank=True, db_column='Client_ID__c', help_text='3 first letters of first name, 3 first letters of last name, and birthdate "AAABBB00000000" (Only used for students and parents). This field is auto-populated by FormAssembly.', max_length=14, null=True, verbose_name='Client ID')),
                ('account', salesforce.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='contact_account_set', to='home.Account')),
            ],
            options={
                'verbose_name': 'Contact',
                'verbose_name_plural': 'Contacts',
                'db_table': 'Contact',
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='Individual',
            fields=[
                ('id', salesforce.fields.SalesforceAutoField(auto_created=True, db_column='Id', primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', salesforce.fields.BooleanField(default=False, verbose_name='Deleted')),
                ('last_name', salesforce.fields.CharField(max_length=80)),
                ('first_name', salesforce.fields.CharField(blank=True, max_length=40, null=True)),
                ('salutation', salesforce.fields.CharField(blank=True, choices=[('Mr.', 'Mr.'), ('Ms.', 'Ms.'), ('Mrs.', 'Mrs.'), ('Dr.', 'Dr.'), ('Prof.', 'Prof.')], max_length=40, null=True)),
                ('middle_name', salesforce.fields.CharField(blank=True, max_length=40, null=True)),
                ('suffix', salesforce.fields.CharField(blank=True, max_length=40, null=True)),
                ('name', salesforce.fields.CharField(max_length=121)),
            ],
            options={
                'verbose_name': 'Individual',
                'verbose_name_plural': 'Individuals',
                'db_table': 'Individual',
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(default='No Description Available', max_length=2000)),
                ('lesson_plan', models.FileField(default=None, upload_to='')),
                ('lecture', models.FileField(default=None, upload_to='')),
                ('video', models.URLField(default=None, null=True)),
                ('activity', models.FileField(default=None, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', salesforce.fields.SalesforceAutoField(auto_created=True, db_column='Id', primary_key=True, serialize=False, verbose_name='ID')),
                ('username', salesforce.fields.CharField(max_length=80)),
                ('last_name', salesforce.fields.CharField(max_length=80)),
                ('first_name', salesforce.fields.CharField(blank=True, max_length=40, null=True)),
                ('middle_name', salesforce.fields.CharField(blank=True, max_length=40, null=True)),
                ('suffix', salesforce.fields.CharField(blank=True, max_length=40, null=True)),
                ('name', salesforce.fields.CharField(max_length=121, verbose_name='Full Name')),
                ('company_name', salesforce.fields.CharField(blank=True, max_length=80, null=True)),
                ('division', salesforce.fields.CharField(blank=True, max_length=80, null=True)),
                ('department', salesforce.fields.CharField(blank=True, max_length=80, null=True)),
                ('title', salesforce.fields.CharField(blank=True, max_length=80, null=True)),
                ('street', salesforce.fields.TextField(blank=True, null=True)),
                ('city', salesforce.fields.CharField(blank=True, max_length=40, null=True)),
                ('state', salesforce.fields.CharField(blank=True, max_length=80, null=True, verbose_name='State/Province')),
                ('postal_code', salesforce.fields.CharField(blank=True, max_length=20, null=True, verbose_name='Zip/Postal Code')),
                ('country', salesforce.fields.CharField(blank=True, max_length=80, null=True)),
                ('is_active', salesforce.fields.BooleanField(default=salesforce.backend.operations.DefaultedOnCreate(), verbose_name='Active')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'User',
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_pwd', models.BooleanField(default=False)),
                ('date_of_birth', models.DateField(default='1901-01-01')),
                ('salesforce_id', models.CharField(default='xxxxxx19010101', max_length=14)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.DeleteModel(
            name='Users',
        ),
        migrations.AddField(
            model_name='individual',
            name='owner',
            field=salesforce.fields.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='individual_owner_set', to='home.User'),
        ),
        migrations.AddField(
            model_name='contact',
            name='created_by',
            field=salesforce.fields.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='contact_createdby_set', to='home.User'),
        ),
        migrations.AddField(
            model_name='contact',
            name='individual',
            field=salesforce.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='home.Individual'),
        ),
        migrations.AddField(
            model_name='contact',
            name='last_modified_by',
            field=salesforce.fields.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='contact_lastmodifiedby_set', to='home.User'),
        ),
        migrations.AddField(
            model_name='contact',
            name='master_record',
            field=salesforce.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='contact_masterrecord_set', to='home.Contact'),
        ),
        migrations.AddField(
            model_name='contact',
            name='npsp_primary_affiliation',
            field=salesforce.fields.ForeignKey(blank=True, db_column='npsp__Primary_Affiliation__c', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='contact_npspprimaryaffiliation_set', to='home.Account'),
        ),
        migrations.AddField(
            model_name='contact',
            name='owner',
            field=salesforce.fields.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='contact_owner_set', to='home.User'),
        ),
        migrations.AddField(
            model_name='classoffering',
            name='created_by',
            field=salesforce.fields.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='classoffering_createdby_set', to='home.User'),
        ),
        migrations.AddField(
            model_name='classoffering',
            name='instructor',
            field=salesforce.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='home.Contact'),
        ),
        migrations.AddField(
            model_name='classoffering',
            name='last_modified_by',
            field=salesforce.fields.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='classoffering_lastmodifiedby_set', to='home.User'),
        ),
        migrations.AddField(
            model_name='classoffering',
            name='location',
            field=salesforce.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='home.Account'),
        ),
        migrations.AddField(
            model_name='classenrollment',
            name='class_offering',
            field=salesforce.fields.ForeignKey(db_column='Class_Offering__c', on_delete=django.db.models.deletion.DO_NOTHING, to='home.ClassOffering'),
        ),
        migrations.AddField(
            model_name='classenrollment',
            name='contact',
            field=salesforce.fields.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='classenrollment_contact_set', to='home.Contact'),
        ),
        migrations.AddField(
            model_name='classenrollment',
            name='created_by',
            field=salesforce.fields.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='classenrollment_createdby_set', to='home.User'),
        ),
        migrations.AddField(
            model_name='classenrollment',
            name='last_modified_by',
            field=salesforce.fields.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='classenrollment_lastmodifiedby_set', to='home.User'),
        ),
        migrations.AddField(
            model_name='classenrollment',
            name='parent_contact',
            field=salesforce.fields.ForeignKey(blank=True, db_column='Parent_Contact__c', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='classenrollment_parentcontact_set', to='home.Contact'),
        ),
        migrations.AddField(
            model_name='attendance',
            name='classroom',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='attendance_classroom', to='home.Classroom'),
        ),
        migrations.AddField(
            model_name='attendance',
            name='session',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='session', to='home.Session'),
        ),
        migrations.AddField(
            model_name='attendance',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='announcement',
            name='recipient_classrooms',
            field=models.ManyToManyField(related_name='recipient_classroom', to='home.Classroom'),
        ),
        migrations.AddField(
            model_name='announcement',
            name='recipient_groups',
            field=models.ManyToManyField(related_name='user_groups', to='auth.Group'),
        ),
    ]
